!function(){function _getCompiled(nools){return function(){return function(options){options=options||{};var defined={Array:Array,String:String,Number:Number,Boolean:Boolean,RegExp:RegExp,Date:Date,Object:Object},scope=options.scope||{},optDefined=options.defined||{};for(var i in optDefined)defined[i]=optDefined[i];return nools.flow("diagnosis-compiled",function(){var Patient=defined.Patient=this.addDefined("Patient",function(){var Defined=function(opts){for(var i in opts)opts.hasOwnProperty(i)&&(this[i]=opts[i])},proto=Defined.prototype;return proto.name=null,proto.fever=null,proto.spots=null,proto.rash=null,proto.soreThroat=null,proto.innoculated=null,Defined}()),Diagnosis=defined.Diagnosis=this.addDefined("Diagnosis",function(){var Defined=function(opts){for(var i in opts)opts.hasOwnProperty(i)&&(this[i]=opts[i])},proto=Defined.prototype;return proto.name=null,proto.diagnosis=null,Defined}()),Treatment=defined.Treatment=this.addDefined("Treatment",function(){var Defined=function(opts){for(var i in opts)opts.hasOwnProperty(i)&&(this[i]=opts[i])},proto=Defined.prototype;return proto.name=null,proto.treatment=null,Defined}());scope.console=console,this.rule("Measels",{scope:scope},[[Patient,"p","p.fever == 'high' && p.spots == true && p.innoculated == true",{name:"n"}],["not",Diagnosis,"d","d.name == n && d.diagnosis == 'allergy'"]],function(facts,flow){var n=facts.n;facts.d,facts.d;var n=facts.n,assert=flow.assert;assert(new Diagnosis({name:n,diagnosis:"measles"}))}),this.rule("Allergy1",{scope:scope},[[Patient,"p","p.spots == true",{name:"n"}],["not",Diagnosis,"d","d.name == n && d.diagnosis == 'measles'"]],function(facts,flow){var n=facts.n;facts.d,facts.d;var n=facts.n,assert=flow.assert;assert(new Diagnosis({name:n,diagnosis:"allergy"}))}),this.rule("Allergy2",{scope:scope},[[Patient,"p","p.rash == true",{name:"n"}]],function(facts,flow){var n=facts.n,assert=flow.assert;assert(new Diagnosis({name:n,diagnosis:"allergy"}))}),this.rule("Flu",{scope:scope},[[Patient,"p","p.soreThroat == true && p.fever in ['mild', 'high']",{name:"n"}]],function(facts,flow){var n=facts.n,assert=flow.assert;assert(new Diagnosis({name:n,diagnosis:"flu"}))}),this.rule("Penicillin",{scope:scope},[[Diagnosis,"d","d.diagnosis == 'measles'",{name:"n"}]],function(facts,flow){var n=facts.n,assert=flow.assert;assert(new Treatment({name:n,treatment:"penicillin"}))}),this.rule("AllergyPills",{scope:scope},[[Diagnosis,"d","d.diagnosis == 'allergy'",{name:"n"}]],function(facts,flow){var n=facts.n,assert=flow.assert;assert(new Treatment({name:n,treatment:"allergyShot"}))}),this.rule("BedRest",{scope:scope},[[Diagnosis,"d","d.diagnosis == 'flu'",{name:"n"}]],function(facts,flow){facts.d,facts.d;var n=facts.n,assert=flow.assert;assert(new Treatment({name:n,treatment:"bedRest"}))}),this.rule("Collect",{scope:scope},[[Treatment,"t"],[Array,"r"]],function(facts){var t=facts.t,r=facts.r;r.push(t)})})}}()}"undefined"!=typeof exports?"undefined"!=typeof module&&module.exports&&(module.exports=_getCompiled(require("../../"))):"function"==typeof define&&define.amd?define(["../../"],function(nools){return _getCompiled(nools)}):_getCompiled(this.nools)()}.call(this);