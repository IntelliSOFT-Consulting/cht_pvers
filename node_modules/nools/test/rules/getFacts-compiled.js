!function(){function _getCompiled(nools){return function(){return function(options){options=options||{};var defined={Array:Array,String:String,Number:Number,Boolean:Boolean,RegExp:RegExp,Date:Date,Object:Object},scope=options.scope||{},optDefined=options.defined||{};for(var i in optDefined)defined[i]=optDefined[i];return nools.flow("getFacts-compiled",function(){scope.console=console,this.rule("getFacts1",{agendaGroup:"get-facts",scope:scope},[[Number,"n"],[String,"s"],[Boolean,"b"],[Date,"d"]],function(facts,flow){var n=facts.n,s=facts.s,b=facts.b,d=facts.d,retract=flow.retract,emit=flow.emit,getFacts=flow.getFacts;emit("get-facts",getFacts()),retract(n),retract(s),retract(b),retract(d)}),this.rule("getFacts2",{agendaGroup:"get-facts-by-type",scope:scope},[[Number,"n"],[String,"s"],[Boolean,"b"],[Date,"d"]],function(facts,flow){var n=facts.n,s=facts.s,b=facts.b,d=facts.d,String=defined.String,Number=defined.Number,Boolean=defined.Boolean,Date=defined.Date,retract=flow.retract,emit=flow.emit,getFacts=flow.getFacts;emit("get-facts-number",getFacts(Number)),emit("get-facts-string",getFacts(String)),emit("get-facts-boolean",getFacts(Boolean)),emit("get-facts-date",getFacts(Date)),retract(n),retract(s),retract(b),retract(d)})})}}()}"undefined"!=typeof exports?"undefined"!=typeof module&&module.exports&&(module.exports=_getCompiled(require("../../"))):"function"==typeof define&&define.amd?define(["../../"],function(nools){return _getCompiled(nools)}):_getCompiled(this.nools)()}.call(this);