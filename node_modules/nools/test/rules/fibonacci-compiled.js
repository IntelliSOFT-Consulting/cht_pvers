!function(){function _getCompiled(nools){return function(){return function(options){options=options||{};var defined={Array:Array,String:String,Number:Number,Boolean:Boolean,RegExp:RegExp,Date:Date,Object:Object},scope=options.scope||{},optDefined=options.defined||{};for(var i in optDefined)defined[i]=optDefined[i];return nools.flow("fibonacci-compiled",function(){var Fibonacci=defined.Fibonacci=this.addDefined("Fibonacci",function(){var Defined=function(sequence,value){this.sequence=sequence,this.value=value||-1},proto=Defined.prototype;return proto.sequence=null,proto.value=-1,proto.constructor=function(sequence,value){this.sequence=sequence,this.value=value||-1},Defined}()),Result=defined.Result=this.addDefined("Result",function(){var Defined=function(value){this.value=value},proto=Defined.prototype;return proto.value=0,proto.constructor=function(value){this.value=value},Defined}());scope.console=console,this.rule("Recurse",{scope:scope},[["not",Fibonacci,"nf","nf.sequence == 1"],[Fibonacci,"f","f.value == -1 && f.sequence != 1"]],function(facts,flow){var f=facts.f,f=facts.f,assert=flow.assert;assert(new Fibonacci(f.sequence-1))}),this.rule("Boostrap",{scope:scope},[[Fibonacci,"f","f.value == -1 && (f.sequence == 1 || f.sequence  == 2)"]],function(facts,flow){var f=facts.f,f=facts.f,modify=flow.modify;modify(f,function(){this.value=1})}),this.rule("Calculate",{scope:scope},[[Fibonacci,"f1","f1.value != -1",{sequence:"s1"}],[Fibonacci,"f2","f2.value != -1 && f2.sequence == s1 + 1",{sequence:"s2"}],[Fibonacci,"f3","f3.value == -1 && f3.sequence == s2 + 1"],[Result,"r"]],function(facts,flow){var f1=facts.f1,f1=facts.f1,f2=facts.f2,f2=facts.f2,f3=facts.f3,f3=facts.f3,r=facts.r,modify=flow.modify,v=f1.value+f2.value;modify(f3,function(){this.value=r.value=v})})})}}()}"undefined"!=typeof exports?"undefined"!=typeof module&&module.exports&&(module.exports=_getCompiled(require("../../"))):"function"==typeof define&&define.amd?define(["../../"],function(nools){return _getCompiled(nools)}):_getCompiled(this.nools)()}.call(this);