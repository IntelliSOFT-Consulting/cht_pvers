{
  "languages": [
    {
      "locale": "en",
      "enabled": true
    },
    {
      "locale": "sw",
      "enabled": true
    }
  ],
  "locales": [
    {
      "code": "en",
      "name": "English"
    }
  ],
  "locale": "en",
  "locale_outgoing": "en",
  "date_format": "YYYY-MM-DD",
  "reported_date_format": "YYYY-MM-DD HH:mm:ss",
  "forms_only_mode": false,
  "default_responses": {
    "start_date": ""
  },
  "district_admins_access_unallocated_messages": false,
  "public_access": false,
  "default_country_code": 1,
  "gateway_number": "+13125551212",
  "schedule_morning_hours": 0,
  "schedule_morning_minutes": 0,
  "schedule_evening_hours": 23,
  "schedule_evening_minutes": 0,
  "synthetic_date": "",
  "contact_display_short": "clinic.name",
  "roles": {
    "data_entry": {
      "name": "usertype.data-entry"
    },
    "analytics": {
      "name": "usertype.analytics"
    },
    "gateway": {
      "name": "usertype.gateway"
    },
    "program_officer": {
      "name": "usertype.program-officer"
    },
    "crfo": {
      "name": "usertype.crfo"
    },
    "chw_supervisor": {
      "name": "usertype.chw-supervisor",
      "offline": true
    },
    "chw": {
      "name": "usertype.chw",
      "offline": true
    }
  },
  "permissions": {
    "can_access_gateway_api": [
      "gateway"
    ],
    "can_bulk_delete_reports": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_configure": [
      "program_officer",
      "crfo"
    ],
    "can_create_people": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_create_places": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_create_records": [
      "data_entry",
      "gateway",
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_create_users": [
      "program_officer"
    ],
    "can_delete_contacts": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_delete_messages": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_delete_reports": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_delete_users": [
      "program_officer"
    ],
    "can_edit": [
      "gateway",
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_edit_profile": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_edit_verification": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_export_all": [
      "program_officer",
      "crfo"
    ],
    "can_export_contacts": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_export_feedback": [
      "program_officer"
    ],
    "can_export_messages": [
      "analytics",
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_log_out_on_android": [],
    "can_update_places": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_update_reports": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_update_users": [
      "program_officer"
    ],
    "can_export_dhis": [
      "national_admin",
      "crfo"
    ],
    "can_verify_reports": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_analytics": [
      "analytics",
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_analytics_tab": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_call_action": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_contacts": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_contacts_tab": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_last_visited_date": [],
    "can_view_uhc_stats": [],
    "can_view_message_action": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_messages": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_messages_tab": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_outgoing_messages": [
      "program_officer"
    ],
    "can_view_reports": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_reports_tab": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_tasks": [
      "chw_supervisor",
      "chw"
    ],
    "can_view_tasks_tab": [
      "chw_supervisor",
      "chw"
    ],
    "can_view_tasks_group": [
      "chw"
    ],
    "can_view_unallocated_data_records": [
      "gateway",
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_users": [
      "program_officer"
    ],
    "can_write_wealth_quintiles": [],
    "can_aggregate_targets": [
      "chw_supervisor"
    ],
    "can_upgrade": [
      "program_officer"
    ],
    "can_view_old_filter_and_search": [],
    "can_view_old_action_bar": []
  },
  "transitions": {
    "accept_patient_reports": false,
    "conditional_alerts": false,
    "default_responses": false,
    "update_sent_by": false,
    "registration": false,
    "update_clinics": false,
    "update_notifications": false,
    "update_scheduled_reports": false,
    "generate_patient_id_on_people": true,
    "death_reporting": true,
    "mark_for_outbound": true
  },
  "outbound": {
    "FHIR_Patients": {
      "relevant_to": "doc.type === 'person' && doc.role == 'patient'",
      "destination": {
        "base_url": "http://openhim-core:5001",
        "path": "/Patient",
        "auth": {
          "type": "basic",
          "username": "amolo",
          "password_key": "openhim"
        }
      },
      "mapping": {
        "resourceType": {
          "expr": "'Patient'"
        },
        "identifier": {
          "expr": "[{ \"system\": \"cht\", \"use\": \"official\", \"value\": doc._id }]",
          "optional": false
        },
        "name": {
          "expr": "[ { \"use\":\"official\", \"family\": doc.name , \"given\": [ doc.short_name ] } ]",
          "optional": false
        },
        "gender": "doc.sex",
        "birthDate": "doc.date_of_birth"
      }
    },
    "FHIR Encounter": {
      "relevant_to": "doc.type === 'data_record' && doc.form === 'padr'",
      "destination": {
        "base_url": "http://openhim-core:5001",
        "path": "/shr/Encounter",
        "auth": {
          "type": "basic",
          "username": "cht_pvers",
          "password_key": "openhim"
        }
      },
      "mapping": {
        "resourceType": {
          "expr": "'Encounter'"
        },
        "identifier": {
          "expr": "[{ \"system\": \"cht\",  \"use\": \"official\", \"value\": doc.fields.inputs.contact._id }]",
          "optional": false
        },
        "status": {
          "expr": "'finished'"
        },
        "class": {
          "expr": "'outpatient'"
        },
        "type": {
          "expr": "[{ \"text\": \"Community health worker visit\" }]"
        },
        "subject.reference": {
          "expr": "\"Patient/?identifier=\" + doc.fields.inputs.contact._id"
        },
        "participant": {
          "expr": "[ { \"type\": [ { \"text\": \"Community health worker\" } ] } ]"
        }
      }
    },
    "FHIR Practitioner": {
      "relevant_to": "doc.type === 'person' && (doc.role == 'chw' || doc.role == 'nurse' )",
      "destination": {
        "base_url": "http://openhim-core:5001",
        "path": "/shr/Practitioner",
        "auth": {
          "type": "basic",
          "username": "cht_pvers",
          "password_key": "openhim"
        }
      },
      "mapping": {
        "resourceType": {
          "expr": "'Practitioner'"
        },
        "gender": "doc.sex",
        "name": {
          "expr": "[ { \"system\":\"cht\", \"family\": doc.name , \"given\": [ doc.short_name ] } ]",
          "optional": false
        },
        "identifier.use": {
          "expr": "'usual'"
        },
        "identifier.value": {
          "expr": "'cht/'.concat(doc._id)"
        },
        "birthDate": "doc.date_of_birth",
        "telecom": {
          "expr": "[{ \"system\":\"phone\",  \"use\": \"official\", \"value\": doc.phone, \"use\":\"mobile\" } ]",
          "optional": true
        },
        "active": {
          "expr": true,
          "optional": false
        }
      }
    },
    "PADR Records": {
      "relevant_to": "doc.type === 'data_record' && doc.form === 'padr'",
      "destination": {
        "base_url": "http://openhim-core:5001",
        "path": "/padr",
        "auth": {
          "type": "basic",
          "username": "cht_pvers",
          "password_key": "openhim"
        }
      },
      "mapping": {
        "Padr": {}
      }
    }
  },
  "place_hierarchy_types": [
    "district_hospital",
    "health_center"
  ],
  "contact_types": [
    {
      "id": "district_hospital",
      "name_key": "contact.type.district_hospital",
      "group_key": "contact.type.district_hospital.plural",
      "create_key": "contact.type.district_hospital.new",
      "edit_key": "contact.type.place.edit",
      "icon": "medic-district-hospital",
      "create_form": "form:contact:district_hospital:create",
      "edit_form": "form:contact:district_hospital:edit"
    },
    {
      "id": "health_center",
      "name_key": "contact.type.health_center",
      "group_key": "contact.type.health_center.plural",
      "create_key": "contact.type.health_center.new",
      "edit_key": "contact.type.place.edit",
      "parents": [
        "district_hospital"
      ],
      "icon": "medic-health-center",
      "create_form": "form:contact:health_center:create",
      "edit_form": "form:contact:health_center:edit"
    },
    {
      "id": "clinic",
      "name_key": "contact.type.clinic",
      "group_key": "contact.type.clinic.plural",
      "create_key": "contact.type.clinic.new",
      "edit_key": "contact.type.place.edit",
      "parents": [
        "health_center"
      ],
      "icon": "medic-clinic",
      "create_form": "form:contact:clinic:create",
      "edit_form": "form:contact:clinic:edit",
      "count_visits": true
    },
    {
      "id": "person",
      "name_key": "contact.type.person",
      "group_key": "contact.type.person.plural",
      "create_key": "contact.type.person.new",
      "edit_key": "contact.type.person.edit",
      "primary_contact_key": "clinic.field.contact",
      "parents": [
        "district_hospital",
        "health_center",
        "clinic"
      ],
      "icon": "medic-person",
      "create_form": "form:contact:person:create",
      "edit_form": "form:contact:person:edit",
      "person": true
    }
  ],
  "forms": {},
  "schedules": [],
  "contact_summary": "var ContactSummary = {}; !function(e,t){if('object'==typeof exports&&'object'==typeof module)module.exports=t();else if('function'==typeof define&&define.amd)define([],t);else{var n=t();for(var r in n)('object'==typeof exports?exports:e)[r]=n[r]}}(ContactSummary,(function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){'undefined'!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:'Module'}),Object.defineProperty(e,'__esModule',{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&'object'==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,'default',{enumerable:!0,value:e}),2&t&&'string'!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,'a',t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p='',n(n.s=0)}([function(e,t,n){var r=n(1),o=n(2);e.exports=o(r,contact,reports)},function(e,t){const n=contact,r=lineage,o=reports,a=[{appliesToType:'person',label:'contact.age',value:n.date_of_birth,width:4,filter:'age'},{appliesToType:'person',label:'contact.sex',value:'contact.sex.'+n.sex,translate:!0,width:4},{appliesToType:'person',label:'person.field.phone',value:n.phone,width:4},{appliesToType:'person',label:'contact.parent',value:r,filter:'lineage'}],i=[{label:'contact.profile.assessment_history',appliesToType:'report',appliesIf:e=>((e=[])=>{let t=null;return e.forEach((function(e){(!t||e.reported_date>t.reported_date)&&(t=e)})),t})(o).reported_date>=e.reported_date,fields:[{label:'contact.profile.most_recent_assessment.date',value:e=>e.reported_date,filter:'simpleDate',width:6},{label:'contact.profile.type',value:e=>e.fields.type,width:6}]}];e.exports={fields:a,cards:i}},function(e,t){function n(e){return e?Array.isArray(e)?e:[e]:[]}function r(e,t){switch(typeof e){case'undefined':return!0;case'function':return e(t);default:return e}}function o(e,t,n){if(r(e.appliesIf,n)){var o='function'==typeof e.fields?e.fields(n):e.fields.filter((function(e){return r(e.appliesIf,n)})).map((function(e){var t={};return a(e,t,'label'),a(e,t,'value'),a(e,t,'translate'),a(e,t,'filter'),a(e,t,'width'),a(e,t,'icon'),e.context&&(t.context={},a(e.context,t.context,'count'),a(e.context,t.context,'total')),t}));return e.modifyContext&&e.modifyContext(t,n),{label:e.label,fields:o}}function a(e,t,r){switch(typeof e[r]){case'undefined':return;case'function':t[r]=e[r](n);break;default:t[r]=e[r]}}}e.exports=function(e,t,r){var a=e.fields||[],i=e.context||{},l=e.cards||[],p=t&&('contact'===t.type?t.contact_type:t.type),c={cards:[],fields:a.filter((function(e){var t=n(e.appliesToType),r=t.filter((function(e){return e&&'!'===e.charAt(0)}));if((0===t.length||t.includes(p)||r.length>0&&!r.includes('!'+p))&&(!e.appliesIf||e.appliesIf()))return delete e.appliesToType,delete e.appliesIf,!0}))};return l.forEach((function(e){var t,a,l,f,u=n(e.appliesToType);if(u.includes('report')&&u.length>1)throw new Error('You cannot set appliesToType to an array which includes the type \\'report\\' and another type.');if(u.includes('report'))for(t=0;t<r.length;++t)a=r[t],!(f=a)||f.errors&&f.errors.length||(l=o(e,i,a))&&c.cards.push(l);else{if(!u.includes(p)&&u.length>0)return;(l=o(e,i))&&c.cards.push(l)}})),c.context=i,c}}])})); return ContactSummary;",
  "tasks": {
    "rules": "define Target { _id: null, contact: null, deleted: null, type: null, pass: null, date: null, groupBy: null }\ndefine Contact { contact: null, reports: null, tasks: null }\ndefine Task { _id: null, deleted: null, doc: null, contact: null, icon: null, date: null, readyStart: null, readyEnd: null, title: null, fields: null, resolved: null, priority: null, priorityLabel: null, reports: null, actions: null }\nrule GenerateEvents {\n  when { c: Contact } then { !function(t){var e={};function n(o){if(e[o])return e[o].exports;var a=e[o]={i:o,l:!1,exports:{}};return t[o].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){'undefined'!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:'Module'}),Object.defineProperty(t,'__esModule',{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&'object'==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,'default',{enumerable:!0,value:t}),2&e&&'string'!=typeof t)for(var a in t)n.d(o,a,function(e){return t[e]}.bind(null,a));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,'a',e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p='',n(n.s=1)}([function(t,e){t.exports=function(t){var e={};!function t(e,n){var o=Object.keys(e);for(var a in o){var r=o[a];switch(typeof e[r]){case'object':t(e[r],n);break;case'function':e[r]=e[r].bind(n)}}}(t,e),e.definition=function t(e){var n=Object.assign({},e),o=Object.keys(n);for(var a in o){var r=o[a];if(Array.isArray(n[r])){n[r]=n[r].slice(0);for(var i=0;i<n[r].length;++i)'object'==typeof n[r][i]&&(n[r][i]=t(n[r][i]))}else'object'==typeof n[r]&&(n[r]=t(n[r]))}return n}(t)}},function(t,e,n){var o=n(2),a=n(3),r=n(4);n(6)(a,c,Utils,Target,emit),r(o,c,Utils,Task,emit),emit('_complete',{_id:!0})},function(t,e){t.exports=[{name:'assessment-after-registration',icon:'icon-healthcare',title:'CHW Consultation',appliesTo:'contacts',appliesToType:['person'],appliesIf:t=>'patient'===t.contact.role,actions:[{form:'assessment'}],events:[{id:'assessment-form',days:7,start:7,end:2}],resolvedIf:function(t,e,n,o){return Utils.isFormSubmittedInWindow(t.reports,'assessment',Utils.addDate(o,-n.start).getTime(),Utils.addDate(o,n.end+1).getTime())}},{name:'padr-after-assessment',icon:'icon-healthcare',title:'Household Visit',appliesTo:'reports',appliesToType:['assessment'],actions:[{form:'padr'}],events:[{id:'padr-form',days:7,start:7,end:2}],appliesIf:function(t,e){return'yes'===Utils.getField(e,'reporter.group_report.reaction')||'yes'===Utils.getField(e,'reporter.group_report.quality')},resolvedIf:function(t,e,n,o){return Utils.isFormSubmittedInWindow(t.reports,'padr',Utils.addDate(o,-n.start).getTime(),Utils.addDate(o,n.end+1).getTime())}},{name:'serious-case',icon:'icon-followup',title:'Ongoing Adverse Reaction',appliesTo:'reports',appliesToType:['padr'],actions:[{form:'follow'}],events:[{id:'alarm-on-ongoing-reaction',days:7,start:7,end:2}],priority:{level:'high'},appliesIf:function(t,e){return'yes'===Utils.getField(e,'reaction.group_reaction.on')},resolvedIf:function(t,e,n,o){return Utils.isFormSubmittedInWindow(t.reports,'follow',Utils.addDate(o,-n.start).getTime(),Utils.addDate(o,n.end+1).getTime())}}]},function(t,e){const n=t=>t.contact&&'person'===t.contact.type&&t.contact.parent&&t.contact.parent.parent&&t.contact.parent.parent.parent;t.exports=[{id:'households-registered-all-time',translation_key:'targets.household.registrations.title',subtitle_translation_key:'targets.all_time.subtitle',type:'count',icon:'medic-clinic',goal:-1,appliesTo:'contacts',context:'user.contact_type === \"chw\"',appliesToType:['household'],appliesIf:t=>n(t.contact),date:'now',aggregate:!0},{id:'people-registered-all-time',translation_key:'targets.person.registrations.title',subtitle_translation_key:'targets.all_time.subtitle',type:'count',icon:'icon-person',context:'user.contact_type === \"chw\"',goal:-1,appliesTo:'contacts',appliesToType:['persons'],appliesIf:t=>n(t.contact),date:'now',aggregate:!0},{id:'padr-all-time',type:'count',icon:'icon-sadr',goal:15,translation_key:'targets.padr.title',subtitle_translation_key:'targets.all_time.subtitle',appliesTo:'reports',appliesToType:['padr'],date:'now'},{id:'padr-this-month',type:'count',icon:'icon-sadr',goal:15,translation_key:'targets.padr.title',subtitle_translation_key:'targets.this_month.subtitle',appliesTo:'reports',appliesToType:['padr'],date:'reported'},{id:'households-with-padr-this-month',type:'count',icon:'icon-household',goal:15,translation_key:'targets.households.with.padr.title',subtitle_translation_key:'targets.this_month.subtitle',appliesTo:'reports',appliesToType:['padr'],date:'reported',emitCustom:(t,e,n)=>{const o=(t=>t.contact&&'clinic'===t.contact.type?t.contact._id:t.contact.parent&&t.contact.parent._id)(n);t(Object.assign({},e,{_id:o,pass:!0}))}},{id:'percentage-contacts-with-adverse-reaction-this-month',type:'percent',icon:'icon-danger-sign',goal:-1,translation_key:'targets.padr.percentage.reaction.title',subtitle_translation_key:'targets.this_month.subtitle',percentage_count_translation_key:'targets.assessments.percentage.with.cough',appliesTo:'reports',appliesToType:['padr'],appliesIf:function(t){return n(t)},passesIf:function(t,e){return'reaction'===Utils.getField(e,'reporter.group_report.type')},idType:'contact',date:'reported'},{id:'percentage-contacts-with-adverse-reaction-on-this-month',type:'percent',icon:'icon-reaction-on',goal:-1,translation_key:'targets.padr.percentage.reaction.on.title',subtitle_translation_key:'targets.this_month.subtitle',percentage_count_translation_key:'targets.padr.percentage.with.reaction',appliesTo:'reports',appliesToType:['padr'],appliesIf:function(t){return n(t)},passesIf:function(t,e){return'yes'===Utils.getField(e,'reaction.group_reaction.on')},idType:'contact',date:'reported'},{id:'percentage-contacts-with-poor-quality-this-month',type:'percent',icon:'icon-risk',goal:-1,translation_key:'targets.padr.percentage.quality.title',subtitle_translation_key:'targets.this_month.subtitle',percentage_count_translation_key:'targets.padr.percentage.with.poor.quality',appliesTo:'reports',appliesToType:['padr'],appliesIf:function(t){return n(t)},passesIf:function(t,e){return'medicine'===Utils.getField(e,'reporter.group_report.type')},idType:'contact',date:'reported'}]},function(t,e,n){var o=n(0),a=n(5);function r(t,e,n,o,a,r){var i;if(t.appliesToType){var s;if('contacts'===t.appliesTo){if(!a.contact)return;s='contact'===a.contact.type?a.contact.contact_type:a.contact.type}else{if(!r)return;s=r.form}if(-1===t.appliesToType.indexOf(s))return}if('scheduled_tasks'===t.appliesTo||!t.appliesIf||t.appliesIf(a,r))if('scheduled_tasks'===t.appliesTo){if(r&&t.appliesIf){if(!r.scheduled_tasks)return;for(i=0;i<r.scheduled_tasks.length;i++)t.appliesIf(a,r,i)&&p(i)}}else p();function c(t,e,n){var o;return(o='function'==typeof t.contactLabel?t.contactLabel(e,n):t.contactLabel)?{name:o}:e.contact}function p(i){var s,p,d,u,f=null;for(s=0;s<t.events.length;s++){if((p=t.events[s]).dueDate)f=p.dueDate(p,a,r,i);else if(r)f=void 0!==i?new Date(e.addDate(new Date(r.scheduled_tasks[i].due),p.days)):new Date(e.addDate(new Date(r.reported_date),p.days));else if(p.dueDate)f=p.dueDate(p,a);else{var y=a.contact&&a.contact.reported_date?new Date(a.contact.reported_date):new Date;f=new Date(e.addDate(y,p.days))}e.isTimely(f,p)&&(u={_id:(r?r._id:a.contact&&a.contact._id)+'~'+(p.id||s)+'~'+t.name,deleted:!(!(a.contact&&a.contact.deleted||r)||!r.deleted),doc:a,contact:c(t,a,r),icon:t.icon,date:f,readyStart:p.start||0,readyEnd:p.end||0,title:t.title,resolved:t.resolvedIf(a,r,p,f,i),actions:l(t.actions,p)},void 0!==i&&(u._id+='-'+i),'function'==typeof(d=t.priority)&&(d=d(a,r)),d&&(u.priority=d.level,u.priorityLabel=d.label),o('task',new n(u)))}}function l(e,n){return t.actions.map((function(t){return function(t,e){var n={source:'task',source_id:r?r._id:a.contact&&a.contact._id,contact:a.contact};t.modifyContent&&t.modifyContent(n,a,r,e);return{type:t.type||'report',form:t.form,label:t.label||'Follow up',content:n}}(t,n)}))}}t.exports=function(t,e,n,i,s){if(t)for(var c,p,l=0;l<t.length;++l)switch('function'!=typeof(c=Object.assign({},t[l],a)).resolvedIf&&(c.resolvedIf=function(t,e,o,a){return c.defaultResolvedIf(t,e,o,a,n)}),o(c),c.appliesTo){case'reports':case'scheduled_tasks':for(var d=0;d<e.reports.length;++d)p=e.reports[d],r(c,n,i,s,e,p);break;case'contacts':e.contact&&r(c,n,i,s,e);break;default:throw new Error('Unrecognised task.appliesTo: '+c.appliesTo)}}},function(t,e){t.exports={defaultResolvedIf:function(t,e,n,o,a){var r,i;a||(a=Utils);var s=function(t){var e;if(!t||!t.actions)return;return(e=t.actions.find((function(t){return!t.type||'report'===t.type})))&&e.form}(this.definition);if(!s)throw new Error('Could not find the default resolving form!');return r=0,r=e?Math.max(a.addDate(o,-n.start).getTime(),e.reported_date+1):a.addDate(o,-n.start).getTime(),i=a.addDate(o,n.end+1).getTime(),a.isFormSubmittedInWindow(t.reports,s,r,i)}}},function(t,e,n){var o=n(0);function a(t,e,n,o,a,r){var i=!!r;if(a.contact){var s='contact'===a.contact.type?a.contact.contact_type:a.contact.type,c=i?r.form:s;if(!(t.appliesToType&&t.appliesToType.indexOf(c)<0)&&(!t.appliesIf||t.appliesIf(a,r)))for(var p=i?r:a.contact,l=function(t,e,n){var o;return o='function'==typeof t.idType?t.idType(e,n):'report'===t.idType?n&&n._id:e.contact&&e.contact._id,Array.isArray(o)||(o=[o]),o}(t,a,r),d=!t.passesIf||!!t.passesIf(a,r),u=function(t,e,n,o){if('function'==typeof t.date)return t.date(n,o)||e.now().getTime();if(void 0===t.date||null===t.date||'now'===t.date)return e.now().getTime();if('reported'===t.date)return o?o.reported_date:n.contact.reported_date;throw new Error('Unrecognised value for target.date: '+t.date)}(t,n,a,r),f=t.groupBy&&t.groupBy(a,r),y=0;y<l.length;++y){var g=new e({_id:l[y]+'~'+t.id,contact:a.contact,deleted:!!p.deleted,type:t.id,pass:d,groupBy:f,date:u});t.emitCustom?t.emitCustom(_,g,a,r):_(g)}}function _(t){o('target',t)}}t.exports=function(t,e,n,r,i){for(var s=0;s<t.length;++s){var c=t[s];switch(o(c),c.appliesTo){case'contacts':a(c,r,n,i,e);break;case'reports':for(var p=0;p<e.reports.length;++p){a(c,r,n,i,e,e.reports[p])}break;default:throw new Error('Unrecognised target.appliesTo: '+c.appliesTo)}}}}]); }\n}",
    "targets": {
      "enabled": true,
      "items": [
        {
          "id": "households-registered-all-time",
          "type": "count",
          "goal": -1,
          "translation_key": "targets.household.registrations.title",
          "icon": "medic-clinic",
          "context": "user.contact_type === \"chw\"",
          "subtitle_translation_key": "targets.all_time.subtitle",
          "aggregate": true
        },
        {
          "id": "people-registered-all-time",
          "type": "count",
          "goal": -1,
          "translation_key": "targets.person.registrations.title",
          "icon": "icon-person",
          "context": "user.contact_type === \"chw\"",
          "subtitle_translation_key": "targets.all_time.subtitle",
          "aggregate": true
        },
        {
          "id": "padr-all-time",
          "type": "count",
          "goal": 15,
          "translation_key": "targets.padr.title",
          "icon": "icon-sadr",
          "subtitle_translation_key": "targets.all_time.subtitle"
        },
        {
          "id": "padr-this-month",
          "type": "count",
          "goal": 15,
          "translation_key": "targets.padr.title",
          "icon": "icon-sadr",
          "subtitle_translation_key": "targets.this_month.subtitle"
        },
        {
          "id": "households-with-padr-this-month",
          "type": "count",
          "goal": 15,
          "translation_key": "targets.households.with.padr.title",
          "icon": "icon-household",
          "subtitle_translation_key": "targets.this_month.subtitle"
        },
        {
          "id": "percentage-contacts-with-adverse-reaction-this-month",
          "type": "percent",
          "goal": -1,
          "translation_key": "targets.padr.percentage.reaction.title",
          "icon": "icon-danger-sign",
          "subtitle_translation_key": "targets.this_month.subtitle"
        },
        {
          "id": "percentage-contacts-with-adverse-reaction-on-this-month",
          "type": "percent",
          "goal": -1,
          "translation_key": "targets.padr.percentage.reaction.on.title",
          "icon": "icon-reaction-on",
          "subtitle_translation_key": "targets.this_month.subtitle"
        },
        {
          "id": "percentage-contacts-with-poor-quality-this-month",
          "type": "percent",
          "goal": -1,
          "translation_key": "targets.padr.percentage.quality.title",
          "icon": "icon-risk",
          "subtitle_translation_key": "targets.this_month.subtitle"
        }
      ]
    }
  }
}
